name: Build server for release
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-server:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: go
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
      - name: Setup go
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Download Go modules
        if: ${{ steps.release.outputs.release_created }}
        run: go mod download
      - name: Upload server files
        if: ${{ steps.release.outputs.release_created }}
        run: make -j upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RELEASE_UPLOAD_URL: ${{ steps.release.outputs.upload_url }}
      - name: Docker meta
        if: ${{ steps.release.outputs.release_created }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/plugnmeet-server
          tags: |
            type=ref,event=tag
            type=pep440,pattern=${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
            type=semver,pattern=${{ steps.release.outputs.tag_name }}
            type=semver,pattern=v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

      - name: Set up QEMU
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
